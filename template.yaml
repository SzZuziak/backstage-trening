apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: microservice-template
  title: Create New Microservice
  description: Template for creating new microservices with various technology stacks
  tags:
    - recommended
    - microservice
spec:
  type: service
  owner: backend-team
  parameters:
    properties:
      appName:
        title: Application Name
        type: string
        description: Provide a name for your microservice
        pattern: ^[a-z0-9-]+$
      description:
        title: Description
        type: string
        description: A description of the microservice
      technology:
        title: Technology Stack
        type: string
        description: Select the technology stack for the microservice
        enum: ["Node.js", "Python", "Java", "Go"]
      repoUrl:
        title: Repository URL
        type: string
        description: URL of the Git repository
      team:
        title: Owner Team
        type: string
        description: Team that will own this service
        enum: ["backend-team", "frontend-team", "devops-team"]
    required: ["appName", "description", "technology", "repoUrl", "team"]
  steps:
    - id: template
      name: Fetch Template
      action: fetch:template
      input:
        url: ./templates/microservice
        values:
          name: ${{ parameters.appName }}
          description: ${{ parameters.description }}
          technology: ${{ parameters.technology }}
          owner: ${{ parameters.team }}
          
    - id: generate-catalog
      name: Generate Catalog Info
      action: catalog:write
      input:
        entity:
          apiVersion: backstage.io/v1alpha1
          kind: Component
          metadata:
            name: ${{ parameters.appName }}
            description: ${{ parameters.description }}
            annotations:
              github.com/project-slug: ${{ parameters.repoUrl }}
            tags:
              - ${{ parameters.technology | lower }}
              - microservice
          spec:
            type: service
            lifecycle: production
            owner: ${{ parameters.team }}
            system: supercompany-platform
            
    - id: publish
      name: Publish to GitHub
      action: publish:github
      input:
        repoUrl: ${{ parameters.repoUrl }}
        description: ${{ parameters.description }}
        defaultBranch: main
        protectDefaultBranch: true
        repoVisibility: private
        collaborators:
          - team: ${{ parameters.team }}
            access: maintain
            
    - id: register
      name: Register Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ parameters.repoUrl }}
        catalogInfoPath: "/catalog-info.yaml"
---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: frontend-module-template
  title: Create Frontend Module
  description: Template for creating new frontend modules with React
  tags:
    - recommended
    - frontend
spec:
  type: website
  owner: frontend-team
  parameters:
    properties:
      moduleName:
        title: Module Name
        type: string
        description: Name of the frontend module
        pattern: ^[a-z0-9-]+$
      description:
        title: Description
        type: string
        description: A description of the module
      repoUrl:
        title: Repository URL
        type: string
        description: URL of the Git repository
    required: ["moduleName", "description", "repoUrl"]
  steps:
    - id: template
      name: Fetch Template
      action: fetch:template
      input:
        url: ./templates/frontend-module
        values:
          name: ${{ parameters.moduleName }}
          description: ${{ parameters.description }}
          
    - id: generate-catalog
      name: Generate Catalog Info
      action: catalog:write
      input:
        entity:
          apiVersion: backstage.io/v1alpha1
          kind: Component
          metadata:
            name: ${{ parameters.moduleName }}
            description: ${{ parameters.description }}
            annotations:
              github.com/project-slug: ${{ parameters.repoUrl }}
            tags:
              - react
              - frontend
          spec:
            type: website
            lifecycle: production
            owner: frontend-team
            system: supercompany-platform
            
    - id: publish
      name: Publish to GitHub
      action: publish:github
      input:
        repoUrl: ${{ parameters.repoUrl }}
        description: ${{ parameters.description }}
        defaultBranch: main
        protectDefaultBranch: true
        repoVisibility: private
        collaborators:
          - team: frontend-team
            access: maintain
            
    - id: register
      name: Register Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ parameters.repoUrl }}
        catalogInfoPath: "/catalog-info.yaml"
